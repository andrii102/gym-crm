spring:
  jpa:
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect

server:
  servlet:
    context-path: /gym-app

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

jwt:
  secret: ${JWT_SECRET}
  expiration: 15m
  refresh-expiration: 24h


---

spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5433/gym-app-dev
    username: ${DB_USER}
    password: ${DB_PASS}
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
  data:
    redis:
      host: localhost
      port: 6379

springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method

---

spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/gym-app
    username: ${DB_PROD_USER}
    password: ${DB_PROD_PASS}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  sql:
    init:
      mode: never
  data:
    redis:
      host: localhost
      port: 6379

---

spring:
  config:
    activate:
      on-profile: docker
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/gym-app-dev
    username: ${DB_USER}
    password: ${DB_PASS}
  jpa:
    hibernate:
      ddl-auto: create
    show-sql: true
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      data-locations: classpath:data.sql
  data:
    redis:
      host: redis
      port: 6379